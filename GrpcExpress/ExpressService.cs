// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: express/express_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc.Express.ExpressService {

  /// <summary>Holder for reflection information generated from express/express_service.proto</summary>
  public static partial class ExpressServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for express/express_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExpressServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1leHByZXNzL2V4cHJlc3Nfc2VydmljZS5wcm90bxIHZXhwcmVzcyI7ChpH",
            "ZXRCdXNpbmVzc0FjdGl2aXR5UmVxdWVzdBIMCgRiYXNlGAEgASgFEg8KB2N1",
            "cnJlbnQYAiABKAUiRQoTQWN0aXZpdHlSb3dSZXNwb25zZRIMCgRiYXNlGAEg",
            "ASgBEg8KB2N1cnJlbnQYAiABKAESDwoHZGluYW15YxgDIAEoASL7AgobR2V0",
            "QnVzaW5lc3NBY3Rpdml0eVJlc3BvbnNlEi8KCVR1cm5PZkRlYhgBIAEoCzIc",
            "LmV4cHJlc3MuQWN0aXZpdHlSb3dSZXNwb25zZRI2ChBUaW1lUmVkZXB0aW9u",
            "RGViGAIgASgLMhwuZXhwcmVzcy5BY3Rpdml0eVJvd1Jlc3BvbnNlEi8KCVR1",
            "cm5TdG9jaxgDIAEoCzIcLmV4cHJlc3MuQWN0aXZpdHlSb3dSZXNwb25zZRIv",
            "CglUaW1lU3RvY2sYBCABKAsyHC5leHByZXNzLkFjdGl2aXR5Um93UmVzcG9u",
            "c2USLgoIVHVybkNyZWQYBSABKAsyHC5leHByZXNzLkFjdGl2aXR5Um93UmVz",
            "cG9uc2USLgoIVGltZUNyZWQYBiABKAsyHC5leHByZXNzLkFjdGl2aXR5Um93",
            "UmVzcG9uc2USMQoLRmluU3RyZW5ndGgYByABKAsyHC5leHByZXNzLkFjdGl2",
            "aXR5Um93UmVzcG9uc2UyggEKFEV4cGVzc0FuYWx5emVTZXJ2aWNlEmoKHUdl",
            "dEJ1c2luZXNzQWN0aXZpdHlCeVllYXJQYWlyEiMuZXhwcmVzcy5HZXRCdXNp",
            "bmVzc0FjdGl2aXR5UmVxdWVzdBokLmV4cHJlc3MuR2V0QnVzaW5lc3NBY3Rp",
            "dml0eVJlc3BvbnNlQh6qAhtHcnBjLkV4cHJlc3MuRXhwcmVzc1NlcnZpY2Vi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Express.ExpressService.GetBusinessActivityRequest), global::Grpc.Express.ExpressService.GetBusinessActivityRequest.Parser, new[]{ "Base", "Current" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Express.ExpressService.ActivityRowResponse), global::Grpc.Express.ExpressService.ActivityRowResponse.Parser, new[]{ "Base", "Current", "Dinamyc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Express.ExpressService.GetBusinessActivityResponse), global::Grpc.Express.ExpressService.GetBusinessActivityResponse.Parser, new[]{ "TurnOfDeb", "TimeRedeptionDeb", "TurnStock", "TimeStock", "TurnCred", "TimeCred", "FinStrength" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetBusinessActivityRequest : pb::IMessage<GetBusinessActivityRequest> {
    private static readonly pb::MessageParser<GetBusinessActivityRequest> _parser = new pb::MessageParser<GetBusinessActivityRequest>(() => new GetBusinessActivityRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBusinessActivityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Express.ExpressService.ExpressServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBusinessActivityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBusinessActivityRequest(GetBusinessActivityRequest other) : this() {
      base_ = other.base_;
      current_ = other.current_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBusinessActivityRequest Clone() {
      return new GetBusinessActivityRequest(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private int base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "current" field.</summary>
    public const int CurrentFieldNumber = 2;
    private int current_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Current {
      get { return current_; }
      set {
        current_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBusinessActivityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBusinessActivityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Base != other.Base) return false;
      if (Current != other.Current) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Base != 0) hash ^= Base.GetHashCode();
      if (Current != 0) hash ^= Current.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Base != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Base);
      }
      if (Current != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Current);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Base != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Base);
      }
      if (Current != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Current);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBusinessActivityRequest other) {
      if (other == null) {
        return;
      }
      if (other.Base != 0) {
        Base = other.Base;
      }
      if (other.Current != 0) {
        Current = other.Current;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Base = input.ReadInt32();
            break;
          }
          case 16: {
            Current = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActivityRowResponse : pb::IMessage<ActivityRowResponse> {
    private static readonly pb::MessageParser<ActivityRowResponse> _parser = new pb::MessageParser<ActivityRowResponse>(() => new ActivityRowResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActivityRowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Express.ExpressService.ExpressServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityRowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityRowResponse(ActivityRowResponse other) : this() {
      base_ = other.base_;
      current_ = other.current_;
      dinamyc_ = other.dinamyc_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActivityRowResponse Clone() {
      return new ActivityRowResponse(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private double base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "current" field.</summary>
    public const int CurrentFieldNumber = 2;
    private double current_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Current {
      get { return current_; }
      set {
        current_ = value;
      }
    }

    /// <summary>Field number for the "dinamyc" field.</summary>
    public const int DinamycFieldNumber = 3;
    private double dinamyc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Dinamyc {
      get { return dinamyc_; }
      set {
        dinamyc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActivityRowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActivityRowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Base != other.Base) return false;
      if (Current != other.Current) return false;
      if (Dinamyc != other.Dinamyc) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Base != 0D) hash ^= Base.GetHashCode();
      if (Current != 0D) hash ^= Current.GetHashCode();
      if (Dinamyc != 0D) hash ^= Dinamyc.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Base != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Base);
      }
      if (Current != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Current);
      }
      if (Dinamyc != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Dinamyc);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Base != 0D) {
        size += 1 + 8;
      }
      if (Current != 0D) {
        size += 1 + 8;
      }
      if (Dinamyc != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActivityRowResponse other) {
      if (other == null) {
        return;
      }
      if (other.Base != 0D) {
        Base = other.Base;
      }
      if (other.Current != 0D) {
        Current = other.Current;
      }
      if (other.Dinamyc != 0D) {
        Dinamyc = other.Dinamyc;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Base = input.ReadDouble();
            break;
          }
          case 17: {
            Current = input.ReadDouble();
            break;
          }
          case 25: {
            Dinamyc = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetBusinessActivityResponse : pb::IMessage<GetBusinessActivityResponse> {
    private static readonly pb::MessageParser<GetBusinessActivityResponse> _parser = new pb::MessageParser<GetBusinessActivityResponse>(() => new GetBusinessActivityResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBusinessActivityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Express.ExpressService.ExpressServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBusinessActivityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBusinessActivityResponse(GetBusinessActivityResponse other) : this() {
      TurnOfDeb = other.turnOfDeb_ != null ? other.TurnOfDeb.Clone() : null;
      TimeRedeptionDeb = other.timeRedeptionDeb_ != null ? other.TimeRedeptionDeb.Clone() : null;
      TurnStock = other.turnStock_ != null ? other.TurnStock.Clone() : null;
      TimeStock = other.timeStock_ != null ? other.TimeStock.Clone() : null;
      TurnCred = other.turnCred_ != null ? other.TurnCred.Clone() : null;
      TimeCred = other.timeCred_ != null ? other.TimeCred.Clone() : null;
      FinStrength = other.finStrength_ != null ? other.FinStrength.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBusinessActivityResponse Clone() {
      return new GetBusinessActivityResponse(this);
    }

    /// <summary>Field number for the "TurnOfDeb" field.</summary>
    public const int TurnOfDebFieldNumber = 1;
    private global::Grpc.Express.ExpressService.ActivityRowResponse turnOfDeb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Express.ExpressService.ActivityRowResponse TurnOfDeb {
      get { return turnOfDeb_; }
      set {
        turnOfDeb_ = value;
      }
    }

    /// <summary>Field number for the "TimeRedeptionDeb" field.</summary>
    public const int TimeRedeptionDebFieldNumber = 2;
    private global::Grpc.Express.ExpressService.ActivityRowResponse timeRedeptionDeb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Express.ExpressService.ActivityRowResponse TimeRedeptionDeb {
      get { return timeRedeptionDeb_; }
      set {
        timeRedeptionDeb_ = value;
      }
    }

    /// <summary>Field number for the "TurnStock" field.</summary>
    public const int TurnStockFieldNumber = 3;
    private global::Grpc.Express.ExpressService.ActivityRowResponse turnStock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Express.ExpressService.ActivityRowResponse TurnStock {
      get { return turnStock_; }
      set {
        turnStock_ = value;
      }
    }

    /// <summary>Field number for the "TimeStock" field.</summary>
    public const int TimeStockFieldNumber = 4;
    private global::Grpc.Express.ExpressService.ActivityRowResponse timeStock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Express.ExpressService.ActivityRowResponse TimeStock {
      get { return timeStock_; }
      set {
        timeStock_ = value;
      }
    }

    /// <summary>Field number for the "TurnCred" field.</summary>
    public const int TurnCredFieldNumber = 5;
    private global::Grpc.Express.ExpressService.ActivityRowResponse turnCred_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Express.ExpressService.ActivityRowResponse TurnCred {
      get { return turnCred_; }
      set {
        turnCred_ = value;
      }
    }

    /// <summary>Field number for the "TimeCred" field.</summary>
    public const int TimeCredFieldNumber = 6;
    private global::Grpc.Express.ExpressService.ActivityRowResponse timeCred_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Express.ExpressService.ActivityRowResponse TimeCred {
      get { return timeCred_; }
      set {
        timeCred_ = value;
      }
    }

    /// <summary>Field number for the "FinStrength" field.</summary>
    public const int FinStrengthFieldNumber = 7;
    private global::Grpc.Express.ExpressService.ActivityRowResponse finStrength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Express.ExpressService.ActivityRowResponse FinStrength {
      get { return finStrength_; }
      set {
        finStrength_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBusinessActivityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBusinessActivityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TurnOfDeb, other.TurnOfDeb)) return false;
      if (!object.Equals(TimeRedeptionDeb, other.TimeRedeptionDeb)) return false;
      if (!object.Equals(TurnStock, other.TurnStock)) return false;
      if (!object.Equals(TimeStock, other.TimeStock)) return false;
      if (!object.Equals(TurnCred, other.TurnCred)) return false;
      if (!object.Equals(TimeCred, other.TimeCred)) return false;
      if (!object.Equals(FinStrength, other.FinStrength)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (turnOfDeb_ != null) hash ^= TurnOfDeb.GetHashCode();
      if (timeRedeptionDeb_ != null) hash ^= TimeRedeptionDeb.GetHashCode();
      if (turnStock_ != null) hash ^= TurnStock.GetHashCode();
      if (timeStock_ != null) hash ^= TimeStock.GetHashCode();
      if (turnCred_ != null) hash ^= TurnCred.GetHashCode();
      if (timeCred_ != null) hash ^= TimeCred.GetHashCode();
      if (finStrength_ != null) hash ^= FinStrength.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (turnOfDeb_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TurnOfDeb);
      }
      if (timeRedeptionDeb_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeRedeptionDeb);
      }
      if (turnStock_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TurnStock);
      }
      if (timeStock_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimeStock);
      }
      if (turnCred_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TurnCred);
      }
      if (timeCred_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TimeCred);
      }
      if (finStrength_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(FinStrength);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (turnOfDeb_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TurnOfDeb);
      }
      if (timeRedeptionDeb_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRedeptionDeb);
      }
      if (turnStock_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TurnStock);
      }
      if (timeStock_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeStock);
      }
      if (turnCred_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TurnCred);
      }
      if (timeCred_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeCred);
      }
      if (finStrength_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinStrength);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBusinessActivityResponse other) {
      if (other == null) {
        return;
      }
      if (other.turnOfDeb_ != null) {
        if (turnOfDeb_ == null) {
          turnOfDeb_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
        }
        TurnOfDeb.MergeFrom(other.TurnOfDeb);
      }
      if (other.timeRedeptionDeb_ != null) {
        if (timeRedeptionDeb_ == null) {
          timeRedeptionDeb_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
        }
        TimeRedeptionDeb.MergeFrom(other.TimeRedeptionDeb);
      }
      if (other.turnStock_ != null) {
        if (turnStock_ == null) {
          turnStock_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
        }
        TurnStock.MergeFrom(other.TurnStock);
      }
      if (other.timeStock_ != null) {
        if (timeStock_ == null) {
          timeStock_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
        }
        TimeStock.MergeFrom(other.TimeStock);
      }
      if (other.turnCred_ != null) {
        if (turnCred_ == null) {
          turnCred_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
        }
        TurnCred.MergeFrom(other.TurnCred);
      }
      if (other.timeCred_ != null) {
        if (timeCred_ == null) {
          timeCred_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
        }
        TimeCred.MergeFrom(other.TimeCred);
      }
      if (other.finStrength_ != null) {
        if (finStrength_ == null) {
          finStrength_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
        }
        FinStrength.MergeFrom(other.FinStrength);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (turnOfDeb_ == null) {
              turnOfDeb_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
            }
            input.ReadMessage(turnOfDeb_);
            break;
          }
          case 18: {
            if (timeRedeptionDeb_ == null) {
              timeRedeptionDeb_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
            }
            input.ReadMessage(timeRedeptionDeb_);
            break;
          }
          case 26: {
            if (turnStock_ == null) {
              turnStock_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
            }
            input.ReadMessage(turnStock_);
            break;
          }
          case 34: {
            if (timeStock_ == null) {
              timeStock_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
            }
            input.ReadMessage(timeStock_);
            break;
          }
          case 42: {
            if (turnCred_ == null) {
              turnCred_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
            }
            input.ReadMessage(turnCred_);
            break;
          }
          case 50: {
            if (timeCred_ == null) {
              timeCred_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
            }
            input.ReadMessage(timeCred_);
            break;
          }
          case 58: {
            if (finStrength_ == null) {
              finStrength_ = new global::Grpc.Express.ExpressService.ActivityRowResponse();
            }
            input.ReadMessage(finStrength_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
