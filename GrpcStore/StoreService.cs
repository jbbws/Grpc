// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: store/store_service.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc.Store.StoreService {

  /// <summary>Holder for reflection information generated from store/store_service.proto</summary>
  public static partial class StoreServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for store/store_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StoreServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlzdG9yZS9zdG9yZV9zZXJ2aWNlLnByb3RvEgVzdG9yZRoWc3RvcmUvc3Rv",
            "cmVfYmFzZS5wcm90byIvChNHZXRDb21wYW5pZXNSZXF1ZXN0EgoKAmlkGAEg",
            "ASgFEgwKBG5hbWUYAiABKAkiMgoUR2V0Q29tcGFuaWVzUmVzcG9uc2USGgoD",
            "b3JnGAEgAygLMg0uY29yZS5Db21wYW55IlIKE0dldERvY3VtZW50c1JlcXVl",
            "c3QSCgoCaWQYASABKAUSDwoHY29tcGFueRgCIAEoCRIeCgZwZXJpb2QYAyAB",
            "KA4yDi5jb3JlLlRyaW1lc3RyIjQKFEdldERvY3VtZW50c1Jlc3BvbnNlEhwK",
            "BGRvY3MYASADKAsyDi5jb3JlLkRvY3VtZW50IkIKEEdldFNlcmllc1JlcXVl",
            "c3QSDQoFZG9jSWQYASABKAUSEAoId2l0aE5hbWUYAiABKAgSDQoFY29kZXMY",
            "AyADKAUiLwoRR2V0U2VyaWVzUmVzcG9uc2USGgoEZGF0YRgBIAMoCzIMLmNv",
            "cmUuU2VyaWVzMuABCgxTdG9yZVNlcnZpY2USRwoMR2V0Q29tcGFuaWVzEhou",
            "c3RvcmUuR2V0Q29tcGFuaWVzUmVxdWVzdBobLnN0b3JlLkdldENvbXBhbmll",
            "c1Jlc3BvbnNlEkcKDEdldERvY3VtZW50cxIaLnN0b3JlLkdldERvY3VtZW50",
            "c1JlcXVlc3QaGy5zdG9yZS5HZXREb2N1bWVudHNSZXNwb25zZRI+CglHZXRT",
            "ZXJpZXMSFy5zdG9yZS5HZXRTZXJpZXNSZXF1ZXN0Ghguc3RvcmUuR2V0U2Vy",
            "aWVzUmVzcG9uc2VCGqoCF0dycGMuU3RvcmUuU3RvcmVTZXJ2aWNlYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Grpc.Store.StoreService.Base.StoreBaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Store.StoreService.GetCompaniesRequest), global::Grpc.Store.StoreService.GetCompaniesRequest.Parser, new[]{ "Id", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Store.StoreService.GetCompaniesResponse), global::Grpc.Store.StoreService.GetCompaniesResponse.Parser, new[]{ "Org" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Store.StoreService.GetDocumentsRequest), global::Grpc.Store.StoreService.GetDocumentsRequest.Parser, new[]{ "Id", "Company", "Period" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Store.StoreService.GetDocumentsResponse), global::Grpc.Store.StoreService.GetDocumentsResponse.Parser, new[]{ "Docs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Store.StoreService.GetSeriesRequest), global::Grpc.Store.StoreService.GetSeriesRequest.Parser, new[]{ "DocId", "WithName", "Codes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.Store.StoreService.GetSeriesResponse), global::Grpc.Store.StoreService.GetSeriesResponse.Parser, new[]{ "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetCompaniesRequest : pb::IMessage<GetCompaniesRequest> {
    private static readonly pb::MessageParser<GetCompaniesRequest> _parser = new pb::MessageParser<GetCompaniesRequest>(() => new GetCompaniesRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCompaniesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Store.StoreService.StoreServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCompaniesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCompaniesRequest(GetCompaniesRequest other) : this() {
      id_ = other.id_;
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCompaniesRequest Clone() {
      return new GetCompaniesRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCompaniesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCompaniesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCompaniesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetCompaniesResponse : pb::IMessage<GetCompaniesResponse> {
    private static readonly pb::MessageParser<GetCompaniesResponse> _parser = new pb::MessageParser<GetCompaniesResponse>(() => new GetCompaniesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCompaniesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Store.StoreService.StoreServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCompaniesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCompaniesResponse(GetCompaniesResponse other) : this() {
      org_ = other.org_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCompaniesResponse Clone() {
      return new GetCompaniesResponse(this);
    }

    /// <summary>Field number for the "org" field.</summary>
    public const int OrgFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Grpc.Store.StoreService.Base.Company> _repeated_org_codec
        = pb::FieldCodec.ForMessage(10, global::Grpc.Store.StoreService.Base.Company.Parser);
    private readonly pbc::RepeatedField<global::Grpc.Store.StoreService.Base.Company> org_ = new pbc::RepeatedField<global::Grpc.Store.StoreService.Base.Company>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.Store.StoreService.Base.Company> Org {
      get { return org_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCompaniesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCompaniesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!org_.Equals(other.org_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= org_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      org_.WriteTo(output, _repeated_org_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += org_.CalculateSize(_repeated_org_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCompaniesResponse other) {
      if (other == null) {
        return;
      }
      org_.Add(other.org_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            org_.AddEntriesFrom(input, _repeated_org_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDocumentsRequest : pb::IMessage<GetDocumentsRequest> {
    private static readonly pb::MessageParser<GetDocumentsRequest> _parser = new pb::MessageParser<GetDocumentsRequest>(() => new GetDocumentsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDocumentsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Store.StoreService.StoreServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentsRequest(GetDocumentsRequest other) : this() {
      id_ = other.id_;
      company_ = other.company_;
      period_ = other.period_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentsRequest Clone() {
      return new GetDocumentsRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "company" field.</summary>
    public const int CompanyFieldNumber = 2;
    private string company_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Company {
      get { return company_; }
      set {
        company_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 3;
    private global::Grpc.Store.StoreService.Base.Trimestr period_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.Store.StoreService.Base.Trimestr Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDocumentsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDocumentsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Company != other.Company) return false;
      if (Period != other.Period) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Company.Length != 0) hash ^= Company.GetHashCode();
      if (Period != 0) hash ^= Period.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Company.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Company);
      }
      if (Period != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Period);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Company.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Company);
      }
      if (Period != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Period);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDocumentsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Company.Length != 0) {
        Company = other.Company;
      }
      if (other.Period != 0) {
        Period = other.Period;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Company = input.ReadString();
            break;
          }
          case 24: {
            period_ = (global::Grpc.Store.StoreService.Base.Trimestr) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDocumentsResponse : pb::IMessage<GetDocumentsResponse> {
    private static readonly pb::MessageParser<GetDocumentsResponse> _parser = new pb::MessageParser<GetDocumentsResponse>(() => new GetDocumentsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDocumentsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Store.StoreService.StoreServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentsResponse(GetDocumentsResponse other) : this() {
      docs_ = other.docs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentsResponse Clone() {
      return new GetDocumentsResponse(this);
    }

    /// <summary>Field number for the "docs" field.</summary>
    public const int DocsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Grpc.Store.StoreService.Base.Document> _repeated_docs_codec
        = pb::FieldCodec.ForMessage(10, global::Grpc.Store.StoreService.Base.Document.Parser);
    private readonly pbc::RepeatedField<global::Grpc.Store.StoreService.Base.Document> docs_ = new pbc::RepeatedField<global::Grpc.Store.StoreService.Base.Document>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.Store.StoreService.Base.Document> Docs {
      get { return docs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDocumentsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDocumentsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!docs_.Equals(other.docs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= docs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      docs_.WriteTo(output, _repeated_docs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += docs_.CalculateSize(_repeated_docs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDocumentsResponse other) {
      if (other == null) {
        return;
      }
      docs_.Add(other.docs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            docs_.AddEntriesFrom(input, _repeated_docs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSeriesRequest : pb::IMessage<GetSeriesRequest> {
    private static readonly pb::MessageParser<GetSeriesRequest> _parser = new pb::MessageParser<GetSeriesRequest>(() => new GetSeriesRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSeriesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Store.StoreService.StoreServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSeriesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSeriesRequest(GetSeriesRequest other) : this() {
      docId_ = other.docId_;
      withName_ = other.withName_;
      codes_ = other.codes_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSeriesRequest Clone() {
      return new GetSeriesRequest(this);
    }

    /// <summary>Field number for the "docId" field.</summary>
    public const int DocIdFieldNumber = 1;
    private int docId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DocId {
      get { return docId_; }
      set {
        docId_ = value;
      }
    }

    /// <summary>Field number for the "withName" field.</summary>
    public const int WithNameFieldNumber = 2;
    private bool withName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WithName {
      get { return withName_; }
      set {
        withName_ = value;
      }
    }

    /// <summary>Field number for the "codes" field.</summary>
    public const int CodesFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_codes_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> codes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Codes {
      get { return codes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSeriesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSeriesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DocId != other.DocId) return false;
      if (WithName != other.WithName) return false;
      if(!codes_.Equals(other.codes_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DocId != 0) hash ^= DocId.GetHashCode();
      if (WithName != false) hash ^= WithName.GetHashCode();
      hash ^= codes_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DocId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DocId);
      }
      if (WithName != false) {
        output.WriteRawTag(16);
        output.WriteBool(WithName);
      }
      codes_.WriteTo(output, _repeated_codes_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DocId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DocId);
      }
      if (WithName != false) {
        size += 1 + 1;
      }
      size += codes_.CalculateSize(_repeated_codes_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSeriesRequest other) {
      if (other == null) {
        return;
      }
      if (other.DocId != 0) {
        DocId = other.DocId;
      }
      if (other.WithName != false) {
        WithName = other.WithName;
      }
      codes_.Add(other.codes_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            DocId = input.ReadInt32();
            break;
          }
          case 16: {
            WithName = input.ReadBool();
            break;
          }
          case 26:
          case 24: {
            codes_.AddEntriesFrom(input, _repeated_codes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSeriesResponse : pb::IMessage<GetSeriesResponse> {
    private static readonly pb::MessageParser<GetSeriesResponse> _parser = new pb::MessageParser<GetSeriesResponse>(() => new GetSeriesResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSeriesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.Store.StoreService.StoreServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSeriesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSeriesResponse(GetSeriesResponse other) : this() {
      data_ = other.data_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSeriesResponse Clone() {
      return new GetSeriesResponse(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Grpc.Store.StoreService.Base.Series> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::Grpc.Store.StoreService.Base.Series.Parser);
    private readonly pbc::RepeatedField<global::Grpc.Store.StoreService.Base.Series> data_ = new pbc::RepeatedField<global::Grpc.Store.StoreService.Base.Series>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.Store.StoreService.Base.Series> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSeriesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSeriesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSeriesResponse other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
