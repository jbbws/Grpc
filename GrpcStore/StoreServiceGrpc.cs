// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: store/store_service.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Grpc.Store.StoreService {
  public static partial class StoreService
  {
    static readonly string __ServiceName = "store.StoreService";

    static readonly grpc::Marshaller<global::Grpc.Store.StoreService.GetCompaniesRequest> __Marshaller_GetCompaniesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.Store.StoreService.GetCompaniesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.Store.StoreService.GetCompaniesResponse> __Marshaller_GetCompaniesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.Store.StoreService.GetCompaniesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.Store.StoreService.GetDocumentsRequest> __Marshaller_GetDocumentsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.Store.StoreService.GetDocumentsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.Store.StoreService.GetDocumentsResponse> __Marshaller_GetDocumentsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.Store.StoreService.GetDocumentsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.Store.StoreService.GetSeriesRequest> __Marshaller_GetSeriesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.Store.StoreService.GetSeriesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Grpc.Store.StoreService.GetSeriesResponse> __Marshaller_GetSeriesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.Store.StoreService.GetSeriesResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Grpc.Store.StoreService.GetCompaniesRequest, global::Grpc.Store.StoreService.GetCompaniesResponse> __Method_GetCompanies = new grpc::Method<global::Grpc.Store.StoreService.GetCompaniesRequest, global::Grpc.Store.StoreService.GetCompaniesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCompanies",
        __Marshaller_GetCompaniesRequest,
        __Marshaller_GetCompaniesResponse);

    static readonly grpc::Method<global::Grpc.Store.StoreService.GetDocumentsRequest, global::Grpc.Store.StoreService.GetDocumentsResponse> __Method_GetDocuments = new grpc::Method<global::Grpc.Store.StoreService.GetDocumentsRequest, global::Grpc.Store.StoreService.GetDocumentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDocuments",
        __Marshaller_GetDocumentsRequest,
        __Marshaller_GetDocumentsResponse);

    static readonly grpc::Method<global::Grpc.Store.StoreService.GetSeriesRequest, global::Grpc.Store.StoreService.GetSeriesResponse> __Method_GetSeries = new grpc::Method<global::Grpc.Store.StoreService.GetSeriesRequest, global::Grpc.Store.StoreService.GetSeriesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSeries",
        __Marshaller_GetSeriesRequest,
        __Marshaller_GetSeriesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Grpc.Store.StoreService.StoreServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of StoreService</summary>
    public abstract partial class StoreServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Grpc.Store.StoreService.GetCompaniesResponse> GetCompanies(global::Grpc.Store.StoreService.GetCompaniesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.Store.StoreService.GetDocumentsResponse> GetDocuments(global::Grpc.Store.StoreService.GetDocumentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Grpc.Store.StoreService.GetSeriesResponse> GetSeries(global::Grpc.Store.StoreService.GetSeriesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for StoreService</summary>
    public partial class StoreServiceClient : grpc::ClientBase<StoreServiceClient>
    {
      /// <summary>Creates a new client for StoreService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public StoreServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for StoreService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public StoreServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected StoreServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected StoreServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Grpc.Store.StoreService.GetCompaniesResponse GetCompanies(global::Grpc.Store.StoreService.GetCompaniesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCompanies(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.Store.StoreService.GetCompaniesResponse GetCompanies(global::Grpc.Store.StoreService.GetCompaniesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCompanies, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.Store.StoreService.GetCompaniesResponse> GetCompaniesAsync(global::Grpc.Store.StoreService.GetCompaniesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCompaniesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.Store.StoreService.GetCompaniesResponse> GetCompaniesAsync(global::Grpc.Store.StoreService.GetCompaniesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCompanies, null, options, request);
      }
      public virtual global::Grpc.Store.StoreService.GetDocumentsResponse GetDocuments(global::Grpc.Store.StoreService.GetDocumentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDocuments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.Store.StoreService.GetDocumentsResponse GetDocuments(global::Grpc.Store.StoreService.GetDocumentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDocuments, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.Store.StoreService.GetDocumentsResponse> GetDocumentsAsync(global::Grpc.Store.StoreService.GetDocumentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDocumentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.Store.StoreService.GetDocumentsResponse> GetDocumentsAsync(global::Grpc.Store.StoreService.GetDocumentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDocuments, null, options, request);
      }
      public virtual global::Grpc.Store.StoreService.GetSeriesResponse GetSeries(global::Grpc.Store.StoreService.GetSeriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSeries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Grpc.Store.StoreService.GetSeriesResponse GetSeries(global::Grpc.Store.StoreService.GetSeriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSeries, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.Store.StoreService.GetSeriesResponse> GetSeriesAsync(global::Grpc.Store.StoreService.GetSeriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSeriesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Grpc.Store.StoreService.GetSeriesResponse> GetSeriesAsync(global::Grpc.Store.StoreService.GetSeriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSeries, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override StoreServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new StoreServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(StoreServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetCompanies, serviceImpl.GetCompanies)
          .AddMethod(__Method_GetDocuments, serviceImpl.GetDocuments)
          .AddMethod(__Method_GetSeries, serviceImpl.GetSeries).Build();
    }

  }
}
#endregion
